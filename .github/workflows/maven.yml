# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 #busca todo o historico de commits 
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Build Spring Boot project
      run: mvn clean install

    - name: Fazendo deploy para a VPS da hostinger
      uses: easingthemes/ssh-deploy@main
      env:
        ARGS: "-rltgoDzvO --delete"
        SOURCE: "target/"                                    #codigo a copiar
        TARGET: ${{ secrets.REMOTE_BACKEND_TARGET }}         #destino do codigo copiado
        REMOTE_HOST: ${{ secrets.REMOTE_BACKEND_HOST }}      #nome do host ou ip
        REMOTE_PORT: ${{ secrets.REMOTE_BACKEND_PORT }}      #porta
        REMOTE_USER: ${{ secrets.REMOTE_BACKEND_USER }}      #user
        SSH_PRIVATE_KEY: ${{ secrets.REMOTE_BACKEND_SERVER_SSH_KEY }}
        

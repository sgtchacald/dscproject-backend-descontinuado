# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 #busca todo o historico de commits 
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Build Spring Boot project
      run: mvn clean install

    - name: FTP Deployer
      uses: sand4rt/ftp-deployer@v1.7
      with:
        sftp: true # optional
        host: ${{ secrets.SFTP_HOST }} # e.g. ftp.host.com or sftp.host.com (without ftp:// or ftps://)
        port: 22 # optional, default is: 21
        username: ${{ secrets.SFTP_USER }} # FTP username
        password: ${{ secrets.SFTP_PASSWORD }} # FTP password
        remote_folder: "/JAVA_HOME/deploy/" # optional, remote path of your FTP server
        local_folder: "/home/runner/work/dscproject-backend/dscproject-backend/target/" # optional, local path, default is: dist
        cleanup: true # optional, remove existing files inside FTP remote folder
        include: "br.com.diegocordeiro-0.0.1-SNAPSHOT.jar" # optional, e.g. '['dist']'
        #exclude: "[]" # optional, e.g. '['node_modules/**', '.git/**', '*.env']'
        #passive: true # optional
        
